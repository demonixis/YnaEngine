<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Yna.Windows</name>
    </assembly>
    <members>
        <member name="T:Yna.Display.Event.SpriteScreenCollideEventArgs">
            <summary>
            Description of SpriteScreenCollideEventArgs.
            </summary>
        </member>
        <member name="M:Yna.YnObject.#ctor">
            <summary>
            Construction d'un objet graphique de base
            </summary>
        </member>
        <member name="M:Yna.YnObject.Die">
            <summary>
            Flag qui permet d'indiquer que cet objet doit être détruit
            La propriété Active est passée à false, l'objet est candidat à la destruction
            </summary>
        </member>
        <member name="M:Yna.YnObject.Recycle">
            <summary>
            Permet de recycler l'objet en lui enlevant le flag de candidat à la destruction
            </summary>
        </member>
        <member name="M:Yna.YnObject.Kill">
            <summary>
            Permet de désactiver un objet 
            Les propriétés Active, Pause et Visible sont mise à false 
            </summary>
        </member>
        <member name="M:Yna.YnObject.Revive">
            <summary>
            Permet de faire revivre l'objet
            Les propriétés Active, Pause et Visibles sont mise à true
            </summary>
        </member>
        <member name="M:Yna.YnObject.SetOriginTo(Yna.SpriteOrigin)">
            <summary>
            Change le point d'origine de l'objet
            </summary>
            <param name="spriteOrigin">Enumeration SpriteOrigin définissant les différents points prédeterminés</param>
        </member>
        <member name="P:Yna.YnObject.Active">
            <summary>
            Active ou désactive l'objet (Influance la mise à jour et l'affichage)
            </summary>
        </member>
        <member name="P:Yna.YnObject.Visible">
            <summary>
            Active ou désactive l'affichage de l'objet (Influance l'affichage)
            </summary>
        </member>
        <member name="P:Yna.YnObject.Pause">
            <summary>
            Active ou désactive la pause (Influance la mise à jour)
            </summary>
        </member>
        <member name="P:Yna.YnObject.Dirty">
            <summary>
            Indique si l'objet doit être détruit totalement
            </summary>
        </member>
        <member name="P:Yna.YnObject.ScrollFactor">
            <summary>
            Indique si l'objet doit suivre la caméra sur X et/ou Y
            </summary>
        </member>
        <member name="P:Yna.YnObject.TextureLoaded">
            <summary>
            Indique si la texture est chargée
            </summary>
        </member>
        <member name="T:Yna.Display.Mapping.MapReader">
            <summary>
            This class will be instantiated by the XNA Framework Content
            Pipeline to read the specified data type from binary .xnb format.
            
            Unlike the other Content Pipeline support classes, this should
            be a part of your main game project, and not the Content Pipeline
            Extension Library project.
            </summary>
        </member>
        <member name="M:Yna.Display.Sprite.PrepareAnimation(System.Int32,System.Int32)">
            <summary>
            Indique que la texture utilisée est une feuille de sprite et que le Sprite
            pourra être animé
            </summary>
            <param name="width">Largeur du sprite sur la feuille de sprite</param>
            <param name="height">Hauteur du sprite sur la feuille de sprite</param>
        </member>
        <member name="M:Yna.Display.Sprite.AddAnimation(System.String,System.Int32[],System.Int32,System.Boolean)">
            <summary>
            Ajoute une animation au Sprite
            </summary>
            <param name="name">Nom de l'animation</param>
            <param name="indexes">Tableau d'indices</param>
            <param name="frameRate">Temps entre chaque frame</param>
            <param name="reversed">Retourner l'animation horizontalement</param>
        </member>
        <member name="M:Yna.Display.Sprite.AddAnimation(System.String,Microsoft.Xna.Framework.Rectangle[],System.Int32,System.Boolean)">
            <summary>
            Ajoute une animation au Sprite
            </summary>
            <param name="name">Nom de l'animation</param>
            <param name="rectangles">Tableau de rectangles encadrant les animations</param>
            <param name="frameRate">Temps entre chaque frame</param>
            <param name="reversed">Retourner l'animation horizontalement</param>
        </member>
        <member name="M:Yna.Display.Sprite.Play(System.String)">
            <summary>
            Joue une animation.
            </summary>
            <param name="animationName">Nom de l'animation</param>
        </member>
        <member name="M:Yna.Display.Sprite.PostUpdate(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Cette méthode est appelée juste après Update() et juste avant Draw()
            </summary>
            <param name="gameTime"></param>
        </member>
        <member name="P:Yna.Display.Sprite.ForceInsideScreen">
            <summary>
            Oblige le Sprite à ne pas quitter l'écran
            </summary>
        </member>
        <member name="P:Yna.Display.Sprite.AllowAcrossScreen">
            <summary>
            Oblige le sprite à ne pas quitter l'écran. Si il sort de l'écran, il est déplacé à sa position inverse
            </summary>
        </member>
        <member name="P:Yna.Display.Sprite.LastPosition">
            <summary>
            Dernière position du Sprite
            </summary>
        </member>
        <member name="T:Yna.Display.Mapping.TileReader">
            <summary>
            This class will be instantiated by the XNA Framework Content
            Pipeline to read the specified data type from binary .xnb format.
            
            Unlike the other Content Pipeline support classes, this should
            be a part of your main game project, and not the Content Pipeline
            Extension Library project.
            </summary>
        </member>
        <member name="T:Yna.Display.TiledMap.Layer">
            <summary>
            Description of Layer.
            </summary>
        </member>
        <member name="F:Yna.Display.TiledMap.Layer._layerWidth">
            <summary>
            The layer's width
            </summary>
        </member>
        <member name="F:Yna.Display.TiledMap.Layer._layerHeight">
            <summary>
            The layer's height
            </summary>
        </member>
        <member name="F:Yna.Display.TiledMap.Layer._tiles">
            <summary>
            The layer's tiles
            </summary>
        </member>
        <member name="F:Yna.Display.TiledMap.Layer._alpha">
            <summary>
            The layer's alpha level
            </summary>
        </member>
        <member name="M:Yna.Display.TiledMap.Layer.#ctor(System.Int32,System.Int32)">
            <summary>
            Constructor with size
            </summary>
            <param name="width">The layer width</param>
            <param name="height">The layer height</param>
        </member>
        <member name="M:Yna.Display.TiledMap.Layer.#ctor(System.Int32[0:,0:])">
            <summary>
            Create the layer from a raw data array containing only tile IDs
            </summary>
            <param name="data">the raw data</param>
        </member>
        <member name="P:Yna.Display.TiledMap.Layer.LayerWidth">
            <summary>
            The layer's width
            </summary>
        </member>
        <member name="P:Yna.Display.TiledMap.Layer.LayerHeight">
            <summary>
            The layer's height
            </summary>
        </member>
        <member name="P:Yna.Display.TiledMap.Layer.Tiles">
            <summary>
            The layer's tiles
            </summary>
        </member>
        <member name="T:Yna.Display.TiledMap.Tile">
            <summary>
            A Tile is a section of a TiledMap.
            </summary>
        </member>
        <member name="F:Yna.Display.TiledMap.Tile._x">
            <summary>
            X position in the map
            </summary>
        </member>
        <member name="F:Yna.Display.TiledMap.Tile._y">
            <summary>
            Y position in the map
            </summary>
        </member>
        <member name="F:Yna.Display.TiledMap.Tile._textureID">
            <summary>
            The texture ID.
            </summary>
        </member>
        <member name="M:Yna.Display.TiledMap.Tile.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            Constructor
            </summary>
            <param name="x">X position in the map</param>
            <param name="y">Y position in the map</param>
            <param name="textureID">Texture ID fore rendering</param>
        </member>
        <member name="P:Yna.Display.TiledMap.Tile.X">
            <summary>
            X tile position in the map
            </summary>
        </member>
        <member name="P:Yna.Display.TiledMap.Tile.Y">
            <summary>
            Y tile position in the map
            </summary>
        </member>
        <member name="P:Yna.Display.TiledMap.Tile.TextureID">
            <summary>
            Texture ID (according to the map tileset)
            </summary>
        </member>
        <member name="T:Yna.Display.TiledMap.TiledMap">
            <summary>
            Tile based map renderer
            </summary>
        </member>
        <member name="F:Yna.Display.TiledMap.TiledMap._tileWidth">
            <summary>
            Tile width
            </summary>
        </member>
        <member name="F:Yna.Display.TiledMap.TiledMap._tileHeight">
            <summary>
            Tile height
            </summary>
        </member>
        <member name="F:Yna.Display.TiledMap.TiledMap._mapWidth">
            <summary>
            The map width (in tiles)
            </summary>
        </member>
        <member name="F:Yna.Display.TiledMap.TiledMap._mapHeight">
            <summary>
            The map height (in tiles)
            </summary>
        </member>
        <member name="F:Yna.Display.TiledMap.TiledMap._layers">
            <summary>
            Layers definition.
            </summary>
        </member>
        <member name="F:Yna.Display.TiledMap.TiledMap._tileset">
            <summary>
            All map tiles are stored in one texture, one after the other.
            From top left to bottom right, each tile has an id. The first
            texture (top left) has the id 0. The cutting is defined by the
            tiles size. The tileset must fist a multiple of the tile size!
            </summary>
        </member>
        <member name="F:Yna.Display.TiledMap.TiledMap._tilesetName">
            <summary>
            The tileset file name
            </summary>
        </member>
        <member name="F:Yna.Display.TiledMap.TiledMap._tilesMapping">
            <summary>
            This array contains zoning for each tile. It is initialized when
            the tileset texture is loaded
            </summary>
        </member>
        <member name="M:Yna.Display.TiledMap.TiledMap.#ctor(System.String,Yna.Display.TiledMap.Layer[],System.Int32)">
            <summary>
            Constructor for tiled maps with square tiles (same width and height)
            </summary>
            <param name="tilesetName">The Tileset file name</param>
            <param name="layers">The map layers</param>
            <param name="tileSize">The tile width</param>
        </member>
        <member name="M:Yna.Display.TiledMap.TiledMap.#ctor(System.String,Yna.Display.TiledMap.Layer[],System.Int32,System.Int32)">
            <summary>
            Basically, the TiledMap is initialized with default values
            </summary>
            <param name="tilesetName">The Tileset file name</param>
            <param name="layers">The map layers</param>
            <param name="tileWidth">The tile width</param>
            <param name="tileHeight">The tile height</param>
        </member>
        <member name="M:Yna.Display.TiledMap.TiledMap.LoadContent">
            <summary>
            Load the tileset texture and initialize the tiles mapping
            </summary>
        </member>
        <member name="M:Yna.Display.TiledMap.TiledMap.Draw(Microsoft.Xna.Framework.Graphics.SpriteBatch,Microsoft.Xna.Framework.Vector2)">
            <summary>
            Draw the tiled map on the entire screen
            </summary>
            <param name="spriteBatch"></param>
            <param name="camera">The current position of the camera on the map</param>
        </member>
        <member name="M:Yna.Display.TiledMap.TiledMap.Draw(Microsoft.Xna.Framework.Graphics.SpriteBatch,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Rectangle)">
            <summary>
            Draw the tiled map in a specific zone
            </summary>
            <param name="spriteBatch"></param>
            <param name="camera">The current position of the camera on the map</param>
            <param name="drawZone">The limited zone where the map will be rendered</param>
        </member>
        <member name="P:Yna.YnG.DeviceWidth">
            <summary>
            Obtient la largeur de l'écran
            </summary>
        </member>
        <member name="P:Yna.YnG.DeviceHeight">
            <summary>
            Obtient la hauteur d'écran
            </summary>
        </member>
        <member name="M:Yna.YnGame.Initialize">
            <summary>
            Initialisation des ressources
            </summary>
        </member>
        <member name="M:Yna.YnGame.SetScreenResolution(System.Int32,System.Int32)">
            <summary>
            Change la résolution d'affichage
            </summary>
            <param name="width">Longueur</param>
            <param name="height">Largeur</param>
        </member>
        <member name="M:Yna.YnGame.SwitchState(Yna.State.YnState)">
            <summary>
            Remplace l'écran d'état courant par l'état passé en paramètre
            </summary>
            <param name="nextState">Prochain écran</param>
        </member>
        <member name="M:Yna.YnGame.ExitGame">
            <summary>
            Quitte le programme
            </summary>
        </member>
    </members>
</doc>
